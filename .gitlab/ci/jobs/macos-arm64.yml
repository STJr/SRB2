osxcross arm64:
  extends: .srb2ci

  stage: build

  allow_failure: true

  artifacts:
    paths:
      - "build.arm64/bin/"
      - "build.arm64/dist/arm64.h"
      - "build.arm64/src/config.h"
    name: "$CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA-arm64-apple-darwin"

  variables:
    OSXCROSS_HOST: oa64
    CMAKE_TOOLCHAIN_FILE: /osxcross/toolchain.cmake
    LD: /opt/osxcross.arm64/ld

  script:
    - - |
          # apt_development
          echo -e "\e[0Ksection_start:`date +%s`:macports_development[collapsed=true]\r\e[0KInstalling development packages"
      - osxcross-macports install --arm64 libopenmpt      || osxcross-macports install --verbose --arm64 libopenmpt || true
      - osxcross-macports install --arm64 wavpack         || osxcross-macports install --verbose --arm64 wavpack    || true
      - osxcross-macports install --arm64 libxmp opusfile || osxcross-macports install --verbose --arm64 libxmp opusfile
      - osxcross-macports install --static --arm64 libsdl2_mixer || osxcross-macports install --verbose --static --arm64 libsdl2_mixer || true
      - osxcross-macports install --static --arm64 curl          || osxcross-macports install --verbose --static --arm64 curl          || true
      - osxcross-macports install --static --arm64 miniupnpc libpng || osxcross-macports install --verbose --static --arm64 miniupnpc libpng
      - |
          # apt_development
          echo -e "\e[0Ksection_end:`date +%s`:macports_development\r\e[0K"

    - - |
          # cmake
          echo -e "\e[0Ksection_start:`date +%s`:cmake[collapsed=false]\r\e[0KBuilding Makefiles"
      - |
          cmake \
            -B build.arm64 \
            -G "Unix Makefiles" \
            -DCMAKE_COLOR_DIAGNOSTICS=OFF \
            -DSRB2_CONFIG_ENABLE_WEBM_MOVIES=OFF \
            -DCPM_USE_LOCAL_PACKAGES:BOOL=ON \
            -DOPENMPT_INCLUDE_DIR:PATH="/osxcross/macports/pkgs/opt/local/include" \
            -DSDL2_INCLUDE_DIR:PATH="/osxcross/macports/pkgs/opt/local/lib" \
            -DSRB2_CONFIG_ENABLE_TESTS:BOOL=OFF \
            -DSRB2_CONFIG_SYSTEM_LIBRARIES:BOOL=ON \
            -DSRB2_CONFIG_USE_GME:BOOL=OFF \
            -DSRB2_SDL2_EXE_NAME=srb2_$CI_PIPELINE_ID \
            -DSRB2_CONFIG_FORCE_NO_MS_BITFIELDS:BOOL=ON
      - |
          # make
          echo -e "\e[0Ksection_end:`date +%s`:make\r\e[0K"

    - - |
          # make
          echo -e "\e[0Ksection_start:`date +%s`:make[collapsed=false]\r\e[0KCompiling SRB2"
      - cmake --build build.arm64 --parallel 1 -- --keep-going
      - |
          # make
          echo -e "\e[0Ksection_end:`date +%s`:make\r\e[0K"

    - - |
          # copy config.h
          echo -e "\e[0Ksection_start:`date +%s`:copy[collapsed=false]\r\e[0KCopying config.h"
      - mkdir --parents --verbose build.arm64/dist
      - cp --reflink=auto --sparse=always --verbose build.arm64/src/config.h build.arm64/dist/arm64.h
      - |
          # make
          echo -e "\e[0Ksection_end:`date +%s`:copy\r\e[0K"


  after_script:
    - - |
           # apt_clean
           echo -e "\e[0Ksection_start:`date +%s`:apt_clean[collapsed=true]\r\e[0KCleaning of unneeded APT packages"
      - apt-get autoclean
      - |
          # apt_clean
          echo -e "\e[0Ksection_end:`date +%s`:apt_clean\r\e[0K"

    - - |
          # ccache_stats
          echo -e "\e[0Ksection_start:`date +%s`:ccache_stats[collapsed=true]\r\e[0Kccache statistics:"
      - ccache --show-stats
      - ccache --show-log-stats || true
      - |
          # ccahe_stats
          echo -e "\e[0Ksection_end:`date +%s`:ccache_stats\r\e[0K"
