udmf
{
	misc
	{
		title = "Miscellaneous";

		0
		{
			title = "None";
		}
		
		6
		{
			title = "Sector Set Portal";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Portal type";
				type = 11;
				enum
				{
					0 = "Link to portal with same tag";
					1 = "Copy portal from second tag";
					2 = "Skybox portal";
					3 = "Plane portal";
					4 = "Horizon portal";
					5 = "Copy portal to line";
					6 = "Interactive portal (unimplemented)";
					7 = "Link to sector with second tag";
					8 = "Link to object with second tag";
				}
			}
			arg2
			{
				title = "Affected planes";
				type = 11;
				enum = "floorceiling";
			}
			arg3
			{
				title = "Misc";
				tooltip = "For type 0 portal: specifies whether the line belongs to the sector viewed\nthrough the portal (1) or the sector in which the portal is seen (0).\nFor type 1 portal: specifies the sector tag of the portal to copy.\nFor type 7 portal: specifies the sector tag to make a portal to.\nFor type 8 portal: specifies the object tag to make a portal to.";
			}
		}

		7
		{
			title = "Sector Flat Alignment";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Affected planes";
				type = 11;
				enum = "floorceiling";
				default = 2;
			}
		}

		10
		{
			title = "Culling Plane";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Culling behavior";
				type = 11;
				enum
				{
					0 = "Always";
					1 = "Only while in sector";
				}
			}
		}

		40
		{
			title = "Visual Portal Between Tagged Linedefs";
		}

		41
		{
			title = "Horizon Effect";
			id = "srb2_horizonline";
		}

		63
		{
			title = "Fake Floor/Ceiling Planes";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
		}
	}

	parameters
	{
		title = "Parameters";

		2
		{
			title = "Custom Exit";
			arg0
			{
				title = "Next map";
			}
			arg1
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Skip score tally";
					2 = "Check emeralds";
				}
			}
			arg2
			{
				title = "Next map (all emeralds)";
			}
		}

		3
		{
			title = "Zoom Tube Parameters";
			arg0
			{
				title = "Speed";
				tooltip = "In fracunits per tic.";
			}
			arg1
			{
				title = "Waypoint sequence";
				tooltip = "The sequence number of (zoom tube) waypoints to use.";
			}
			arg2
			{
				title = "Check player direction?";
				type = 11;
				enum = "yesno";
			}
		}

		4
		{
			title = "Speed Pad Parameters";
			arg0
			{
				title = "Speed";
				tooltip = "In fracunits per tic.";
			}
			arg1
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "No teleport to center";
					2 = "Force spinning frames";
				}
			}
			stringarg0
			{
				title = "Sound";
				type = 2;
				tooltip = "Takes a DS constant.\nExample: DSTHOK";
			}
		}

		8
		{
			title = "Set Camera Collision Planes";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
		}

		11
		{
			title = "Rope Hang Parameters";
			arg0
			{
				title = "Speed";
				tooltip = "In fracunits per tic.";
			}
			arg1
			{
				title = "Waypoint sequence";
				tooltip = "The sequence number of (zoom tube) waypoints to use.";
			}
			arg2
			{
				title = "Loop?";
				type = 11;
				enum = "yesno";
			}
		}

		14
		{
			title = "Bustable Block Parameters";
			arg0
			{
				title = "Debris spacing";
			}
			arg1
			{
				title = "Debris lifetime (tics)";
			}
			arg2
			{
				title = "Launch from center?";
				type = 11;
				enum = "noyes";
			}
			stringarg0
			{
				title = "Debris object type";
				tooltip = "Uses a MT_ constant.\nExample: MT_ROCKCRUMBLE16\nDefaults to MT_ROCKCRUMBLE1.";
				type = 2;
			}
		}

		15
		{
			title = "Fan Particle Generator Heights";
		}

		16
		{
			title = "Minecart Parameters";
			arg0
			{
				title = "Order";
			}
		}

		64
		{
			title = "Continuously Appearing/Disappearing FOF";
			arg0
			{
				title = "Control linedef tag";
				type = 15;
			}
			arg1
			{
				title = "Control sector tag";
				type = 13;
			}
			arg2
			{
				title = "On time";
			}
			arg3
			{
				title = "Off time";
			}
			arg4
			{
				title = "Initial delay";
			}
			arg5
			{
				title = "Play sound?";
				type = 11;
				enum = "yesno";
			}
		}
	}

	polyobject
	{
		title = "PolyObject";

		20
		{
			title = "PolyObject First Line";
			arg0
			{
				title = "PolyObject tag";
				type = 14;
			}
			arg1
			{
				title = "Parent PolyObject tag";
				type = 14;
			}
			arg2
			{
				title = "Translucency level";
				tooltip = "Ranges from 0 (fully opaque) to 10 (fully transparent).";
			}
			arg3
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Don't render insides";
					2 = "Intangible";
					4 = "Stopped by pushables";
					8 = "Don't render planes";
					16 = "Trigger linedef executor on touch";
					32 = "Crush player";
					64 = "Cut cyan flat pixels";
				}
			}
			arg4
			{
				title = "Trigger linedef tag";
				type = 15;
			}
		}

		30
		{
			title = "Waving PolyObject Flag";
			arg0
			{
				title = "PolyObject tag";
				type = 14;
			}
			arg1
			{
				title = "Speed";
				tooltip = "In fracunits per tic.";
			}
			arg2
			{
				title = "Distance";
				tooltip = "How far to move in either direction, in fracunits.";
			}
		}

		31
		{
			title = "Move PolyObject by Front Sector Displacement";
			arg0
			{
				title = "PolyObject tag";
				type = 14;
			}
			arg1
			{
				title = "Base speed";
				tooltip = "How much the front sector displacement translates.\nA value of 256 amounts to a 1:1 translation.";
			}
		}

		32
		{
			title = "Rotate PolyObject by Front Sector Displacement";
			arg0
			{
				title = "PolyObject tag";
				type = 14;
			}
			arg1
			{
				title = "Plane factor";
				default = 128;
			}
			arg2
			{
				title = "Rotation factor";
				default = 90;
			}
			arg3
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Don't turn others";
					2 = "Turn players";
				}
			}
		}
	}

	planemove
	{
		title = "Plane Movement";

		52
		{
			title = "Continuously Falling Sector";
			arg0
			{
				title = "Speed";
				tooltip = "In fracunits per tic.";
			}
			arg1
			{
				title = "Direction";
				type = 11;
				enum
				{
					0 = "Fall";
					1 = "Rise";
				}
			}
		}

		53
		{
			title = "Continuous Plane Mover (Slowdown)";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Affected planes";
				type = 11;
				enum = "floorceiling";
			}
			arg2
			{
				title = "Forward speed";
				tooltip = "In fracunits per tic.";
			}
			arg3
			{
				title = "Return speed";
				tooltip = "In fracunits per tic.";
			}
			arg4
			{
				title = "Starting delay";
			}
			arg5
			{
				title = "Delay before flip";
			}
		}

		56
		{
			title = "Continuous Plane Mover (Constant)";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Affected planes";
				type = 11;
				enum = "floorceiling";
			}
			arg2
			{
				title = "Forward speed";
				tooltip = "In fracunits per tic.";
			}
			arg3
			{
				title = "Return speed";
				tooltip = "In fracunits per tic.";
			}
			arg4
			{
				title = "Starting delay";
			}
			arg5
			{
				title = "Delay before flip";
			}
		}

		60
		{
			title = "Activate Moving Platform";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Speed";
				tooltip = "In fracunits per tic.";
			}
			arg2
			{
				title = "Starting delay (tics)";
			}
			arg3
			{
				title = "Delay before flip";
			}
			arg4
			{
				title = "Starting direction";
				type = 11;
				enum = "downup";
			}
		}

		61
		{
			title = "Ceiling Crusher";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Starting direction";
				type = 11;
				enum
				{
					0 = "Crush";
					1 = "Retract";
				}
			}
			arg2
			{
				title = "Crush speed";
				tooltip = "In fracunits per tic.";
			}
			arg3
			{
				title = "Retract speed";
				tooltip = "In fracunits per tic.";
			}
		}

		66
		{
			title = "Move Planes by Front Sector Displacement";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Affected planes";
				type = 11;
				enum = "floorceiling";
			}
			arg2
			{
				title = "Translation factor";
				default = 256;
			}
		}
	}

	fofmodifiers
	{
		title = "FOF Modifiers";

		70
		{
			title = "Add Raise Thinker";
			arg0
			{
				title = "Control linedef tag";
				type = 15;
			}
			arg1
			{
				title = "Speed";
				tooltip = "In fracunits per tic.";
			}
			arg2
			{
				title = "Destination height";
			}
			arg3
			{
				title = "Require spindash?";
				type = 11;
				enum = "noyes";
			}
		}

		71
		{
			title = "Add Air Bobbing Thinker";
			arg0
			{
				title = "Control linedef tag";
				type = 15;
			}
			arg1
			{
				title = "Bobbing distance";
			}
			arg2
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Raise";
					2 = "Require spindash";
					4 = "Dynamic";
				}
			}
		}

		72
		{
			title = "Add Thwomp Thinker";
			arg0
			{
				title = "Control linedef tag";
				type = 15;
			}
			arg1
			{
				title = "Falling speed";
				tooltip = "In fracunits per tic.";
			}
			arg2
			{
				title = "Rising speed";
				tooltip = "In fracunits per tic.";
			}
			stringarg0
			{
				title = "Crushing sound";
				tooltip = "Takes a DS constant.\nExample: DSTHOK";
				type = 2;
			}
		}

		73
		{
			title = "Add Laser Thinker";
			arg0
			{
				title = "Control linedef tag";
				type = 15;
			}
			arg1
			{
				title = "Damage bosses?";
				type = 11;
				enum = "yesno";
			}
		}

		74
		{
			title = "Make FOF Bustable";
			arg0
			{
				title = "Control linedef tag";
				type = 15;
			}
			arg1
			{
				title = "Bustable type";
				type = 11;
				enum
				{
					0 = "Touch";
					1 = "Spin";
					2 = "Regular";
					3 = "Strong";
				}
			}
			arg2
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Bustable by pushables";
					2 = "Trigger linedef executor";
					4 = "Only bustable from below";
				}
			}
			arg3
			{
				title = "Linedef executor tag";
				type = 15;
			}
		}

		75
		{
			title = "Make FOF Quicksand";
			arg0
			{
				title = "Control linedef tag";
				type = 15;
			}
			arg1
			{
				title = "Sinking speed";
				tooltip = "In fracunits per tic.";
			}
			arg2
			{
				title = "Friction";
			}
		}

		76
		{
			title = "Make FOF Bouncy";
			arg0
			{
				title = "Control linedef tag";
				type = 15;
			}
			arg1
			{
				title = "Bounce strength";
			}
		}
	}

	fof
	{
		title = "FOF";

		100
		{
			title = "Solid";
			id = "srb2_fofsolid";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Alpha";
				default = 255;
				tooltip = "Ranges from 0 (fully transparent) to 255 (fully opaque).";
			}
			arg2
			{
				title = "Blending mode";
				type = 11;
				enum = "blendmodes";
			}
			arg3
			{
				title = "Appearance";
				type = 12;
				enum
				{
					1 = "Don't render planes";
					2 = "Don't render sides";
					4 = "Render insides";
					8 = "Render only insides";
					16 = "No shadow";
					32 = "Cut cyan flat pixels";
				}
			}
			arg4
			{
				title = "Tangibility";
				type = 12;
				enum = "tangibility";
			}
		}

		120
		{
			title = "Water";
			id = "srb2_fofwater";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Alpha";
				default = 128;
				tooltip = "Ranges from 0 (fully transparent) to 255 (fully opaque).";
			}
			arg2
			{
				title = "Blending mode";
				type = 11;
				enum = "blendmodes";
			}
			arg3
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Don't render sides";
					2 = "Render separate light level";
					4 = "Use target light level";
					8 = "No ripple effect";
					16 = "Goo physics";
					32 = "Cut cyan flat pixels";
				}
			}
		}

		150
		{
			title = "Air Bobbing";
			id = "srb2_fofsolidopaque";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Bobbing distance";
			}
			arg2
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Raise";
					2 = "Require spindash";
					4 = "Dynamic";
				}
			}
		}

		160
		{
			title = "Water Bobbing";
			id = "srb2_fofsolidopaque";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
		}

		170
		{
			title = "Crumbling";
			id = "srb2_fofcrumbling";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Alpha";
				default = 255;
				tooltip = "Ranges from 0 (fully transparent) to 255 (fully opaque).";
			}
			arg2
			{
				title = "Blending mode";
				type = 11;
				enum = "blendmodes";
			}
			arg3
			{
				title = "Tangibility";
				type = 12;
				enum = "tangibility";
			}
			arg4
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "No shadow";
					2 = "No respawn";
					4 = "Air bobbing";
					8 = "Float on water";
					16 = "Cut cyan flat pixels";
				}
			}
		}
		
		190
		{
			title = "Rising";
			id = "srb2_fofsolid";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Alpha";
				default = 255;
				tooltip = "Ranges from 0 (fully transparent) to 255 (fully opaque).";
			}
			arg2
			{
				title = "Blending mode";
				type = 11;
				enum = "blendmodes";
			}
			arg3
			{
				title = "Appearance";
				type = 12;
				enum
				{
					1 = "Don't render planes";
					2 = "Don't render sides";
					4 = "Render insides";
					8 = "Render only insides";
					16 = "No shadow";
					32 = "Cut cyan flat pixels";
				}
			}
			arg4
			{
				title = "Tangibility";
				type = 12;
				enum = "tangibility";
			}
			arg5
			{
				title = "Speed";
				tooltip = "In fracunits per tic.";
			}
			arg6
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Lower";
					2 = "Require spindash";
				}
			}
		}

		200
		{
			title = "Light Block";
			id = "srb2_foflight";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Expand to bottom?";
				type = 11;
				enum = "noyes";
			}
		}

		202
		{
			title = "Fog Block";
			id = "srb2_foffog";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
		}

		220
		{
			title = "Intangible";
			id = "srb2_fofintangible";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Alpha";
				default = 255;
				tooltip = "Ranges from 0 (fully transparent) to 255 (fully opaque).";
			}
			arg2
			{
				title = "Blending mode";
				type = 11;
				enum = "blendmodes";
			}
			arg3
			{
				title = "Appearance";
				type = 12;
				enum
				{
					1 = "Don't render planes";
					2 = "Don't render sides";
					4 = "Don't render insides";
					8 = "Render only insides";
					16 = "No shadow";
					32 = "Cut cyan flat pixels";
				}
			}
		}

		223
		{
			title = "Intangible, Invisible";
			id = "srb2_fofintangibleinvisible";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
		}

		250
		{
			title = "Mario Block";
			id = "srb2_fofsolidopaque";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Block type";
				type = 12;
				enum
				{
					1 = "Brick";
					2 = "Invisible";
				}
			}
		}

		251
		{
			title = "Thwomp Block";
			id = "srb2_fofsolidopaque";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Falling speed";
				tooltip = "In fracunits per tic.";
			}
			arg2
			{
				title = "Rising speed";
				tooltip = "In fracunits per tic.";
			}
			stringarg0
			{
				title = "Crushing sound";
				tooltip = "Takes a DS constant.\nExample: DSTHOK";
				type = 2;
			}
		}

		254
		{
			title = "Bustable Block";
			id = "srb2_fofbustable";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Alpha";
				default = 255;
				tooltip = "Ranges from 0 (fully transparent) to 255 (fully opaque).";
			}
			arg2
			{
				title = "Blending mode";
				type = 11;
				enum = "blendmodes";
			}
			arg3
			{
				title = "Bustable type";
				type = 11;
				enum
				{
					0 = "Touch";
					1 = "Spin";
					2 = "Regular";
					3 = "Strong";
				}
			}
			arg4
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Bustable by pushables";
					2 = "Trigger linedef executor";
					4 = "Only bustable from below";
					8 = "Cut cyan flat pixels";
				}
			}
			arg5
			{
				title = "Linedef executor tag";
				type = 15;
			}
		}

		257
		{
			title = "Quicksand";
			id = "srb2_fofsolidopaque";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Ripple effect?";
				type = 11;
				enum = "yesno";
			}
			arg2
			{
				title = "Sinking speed";
				tooltip = "In fracunits per tic.";
			}
			arg3
			{
				title = "Friction";
			}
		}

		258
		{
			title = "Laser";
			id = "srb2_foflaser";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Alpha";
				default = 128;
				tooltip = "Ranges from 0 (fully transparent) to 255 (fully opaque).";
			}
			arg2
			{
				title = "Blending mode";
				type = 11;
				enum = "blendmodes";
			}
			arg3
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Don't damage bosses";
					2 = "Cut cyan flat pixels";
				}
			}
		}

		259
		{
			title = "Custom";
			id = "srb2_fofcustom";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Alpha";
				default = 255;
				tooltip = "Ranges from 0 (fully transparent) to 255 (fully opaque).";
			}
			arg2
			{
				title = "Blending mode";
				type = 11;
				enum = "blendmodes";
			}
			arg3
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Exists";
					2 = "Block player";
					4 = "Block others";
					8 = "Render sides";
					16 = "Render planes";
					32 = "Water";
					64 = "No shadow";
					128 = "Cut solid walls";
					256 = "Cut extra walls";
					512 = "Split sprites";
					1024 = "Render inside planes";
					2048 = "Extra";
					8192 = "Fog";
					16384 = "Only render inside planes";
					32768 = "Render inside walls";
					65536 = "Only render inside walls";
					131072 = "Double shadow";
					262144 = "Water bobbing";
					524288 = "Don't respawn";
					1048576 = "Crumbling";
					2097152 = "Goo water";
					4194304 = "Mario block";
					33554432 = "Intangible from below";
					67108864 = "Intangible from above";
					134217728 = "Ripple effect";
					268435456 = "Don't copy light level";
					536870912 = "Bouncy";
					1073741824 = "Cut cyan flat pixels";
				}
			}
		}
	}

	linedeftrigger
	{
		title = "Linedef Executor Trigger";

		300
		{
			title = "Basic";
			arg0
			{
				title = "Trigger type";
				type = 11;
				enum = "triggertype";
			}
		}

		303
		{
			title = "Ring Count";
			arg0
			{
				title = "Trigger type";
				type = 11;
				enum = "triggertype";
			}
			arg1
			{
				title = "Rings";
			}
			arg2
			{
				title = "Comparison";
				type = 11;
				enum = "comparison";
			}
			arg3
			{
				title = "Count all players?";
				type = 11;
				enum = "noyes";
			}
		}

		305
		{
			title = "Character Ability";
			arg0
			{
				title = "Trigger type";
				type = 11;
				enum = "triggertype";
			}
			arg1
			{
				title = "Ability";
				type = 11;
				enum
				{
					0 = "None";
					1 = "Thok";
					2 = "Fly";
					3 = "Glide and climb";
					4 = "Homing attack";
					5 = "Swim";
					6 = "Double jump";
					7 = "Float";
					8 = "Float with slow descent";
					9 = "Telekinesis";
					10 = "Fall switch";
					11 = "Jump boost";
					12 = "Air drill";
					13 = "Jump-thok";
					14 = "Pogo bounce";
					15 = "Twin spin";
				}
			}
		}

		308
		{
			title = "Gametype";
			arg0
			{
				title = "Trigger type";
				type = 11;
				enum = "triggertype";
			}
			arg1
			{
				title = "Rules";
				type = 12;
				enum
				{
					1 = "Campaign";
					2 = "Ringslinger";
					4 = "Spectators";
					8 = "Lives";
					16 = "Teams";
					32 = "First person";
					64 = "Match emeralds";
					128 = "Team flags";
					256 = "Coop";
					512 = "Allow special stages";
					1024 = "Spawn emerald tokens";
					2048 = "Emerald hunt";
					4096 = "Race";
					8192 = "Tag";
					16384 = "Point limit";
					32768 = "Time limit";
					65536 = "Overtime";
					131072 = "Hurt messages";
					262144 = "Friendly fire";
					524288 = "Hide time countdown";
					1048576 = "Frozen after hide time";
					2097152 = "Blindfolded view";
					4194304 = "Respawn delay";
					8388608 = "Award pity shield";
					16777216 = "Death score penalty";
					33554432 = "No spectator spawn";
					67108864 = "Use match starts";
					134217728 = "Spawn invincibility";
					268435456 = "Allow enemies";
					536870912 = "Allow exit sectors";
					1073741824 = "No title card";
					2147483648 = "Allow cutscenes";
				}
			}
			arg2
			{
				title = "Check if";
				type = 11;
				enum = "flagcheck";
			}
		}

		309
		{
			title = "CTF Team";
			arg0
			{
				title = "Trigger type";
				type = 11;
				enum = "triggertype";
			}
			arg1
			{
				title = "Team";
				type = 11;
				enum = "team";
			}
		}

		313
		{
			title = "No More Enemies";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
		}

		314
		{
			title = "Number of Pushables";
			arg0
			{
				title = "Trigger type";
				type = 11;
				enum = "triggertype";
			}
			arg1
			{
				title = "Pushables";
			}
			arg2
			{
				title = "Comparison";
				type = 11;
				enum = "comparison";
			}
		}

		317
		{
			title = "Condition Set Trigger";
			arg0
			{
				title = "Trigger type";
				type = 11;
				enum = "triggertype";
			}
			arg1
			{
				title = "Trigger ID";
			}
		}

		319
		{
			title = "Unlockable";
			arg0
			{
				title = "Trigger type";
				type = 11;
				enum = "triggertype";
			}
			arg1
			{
				title = "Unlockable ID";
			}
		}

		321
		{
			title = "Trigger After X Calls";
			arg0
			{
				title = "Trigger type";
				type = 11;
				enum = "xtriggertype";
			}
			arg1
			{
				title = "Calls";
			}
			arg2
			{
				title = "Can retrigger?";
				type = 11;
				enum = "noyes";
			}
			arg3
			{
				title = "Starting calls";
			}
		}

		323
		{
			title = "NiGHTSerize";
			arg0
			{
				title = "Trigger type";
				type = 11;
				enum
				{
					0 = "Each time";
					1 = "Once";
				}
			}
			arg1
			{
				title = "Mare number";
			}
			arg2
			{
				title = "Lap number";
			}
			arg3
			{
				title = "Mare comparison";
				type = 11;
				enum = "comparison";
			}
			arg4
			{
				title = "Lap comparison";
				type = 11;
				enum = "comparison";
			}
			arg5
			{
				title = "Compared player";
				type = 11;
				enum
				{
					0 = "Fastest";
					1 = "Slowest";
					2 = "Triggerer";
				}
			}
			arg6
			{
				title = "NiGHTS check";
				type = 11;
				enum
				{
					0 = "No check";
					1 = "Trigger if player was not NiGHTS";
					2 = "Trigger if player was already NiGHTS";
				}
			}
			arg7
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Only count bonus time laps";
					2 = "Only trigger if final mare completed";
				}
			}
		}
		325
		{
			title = "De-NiGHTSerize";
			arg0
			{
				title = "Trigger type";
				type = 11;
				enum
				{
					0 = "Each time";
					1 = "Once";
				}
			}
			arg1
			{
				title = "Mare number";
			}
			arg2
			{
				title = "Lap number";
			}
			arg3
			{
				title = "Mare comparison";
				type = 11;
				enum = "comparison";
			}
			arg4
			{
				title = "Lap comparison";
				type = 11;
				enum = "comparison";
			}
			arg5
			{
				title = "Compared player";
				type = 11;
				enum
				{
					0 = "Fastest";
					1 = "Slowest";
					2 = "Triggerer";
				}
			}
			arg6
			{
				title = "NiGHTS check";
				type = 11;
				enum
				{
					0 = "No check";
					1 = "Trigger if nobody is now NiGHTS";
					2 = "Trigger if somebody is still NiGHTS";
				}
			}
			arg7
			{
				title = "Only bonus laps?";
				type = 11;
				enum = "noyes";
			}
		}
		327
		{
			title = "NiGHTS Lap";
			arg0
			{
				title = "Trigger type";
				type = 11;
				enum
				{
					0 = "Each time";
					1 = "Once";
				}
			}
			arg1
			{
				title = "Mare number";
			}
			arg2
			{
				title = "Lap number";
			}
			arg3
			{
				title = "Mare comparison";
				type = 11;
				enum = "comparison";
			}
			arg4
			{
				title = "Lap comparison";
				type = 11;
				enum = "comparison";
			}
			arg5
			{
				title = "Compared player";
				type = 11;
				enum
				{
					0 = "Fastest";
					1 = "Slowest";
					2 = "Triggerer";
				}
			}
			arg6
			{
				title = "Only bonus laps?";
				type = 11;
				enum = "noyes";
			}
		}
		329
		{
			title = "Ideya Capture Touch";
			arg0
			{
				title = "Trigger type";
				type = 11;
				enum
				{
					0 = "Each time";
					1 = "Once";
				}
			}
			arg1
			{
				title = "Mare number";
			}
			arg2
			{
				title = "Lap number";
			}
			arg3
			{
				title = "Mare comparison";
				type = 11;
				enum = "comparison";
			}
			arg4
			{
				title = "Lap comparison";
				type = 11;
				enum = "comparison";
			}
			arg5
			{
				title = "Compared player";
				type = 11;
				enum
				{
					0 = "Fastest";
					1 = "Slowest";
					2 = "Triggerer";
				}
			}
			arg6
			{
				title = "Spheres check";
				type = 11;
				enum
				{
					0 = "Trigger if enough spheres";
					1 = "Trigger if not enough spheres";
					2 = "Trigger regardless of spheres";
				}
			}
			arg7
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Only count bonus time laps";
					2 = "Trigger upon entering Ideya Capture";
				}
			}
		}

		331
		{
			title = "Player Skin";
			arg0
			{
				title = "Trigger type";
				type = 11;
				enum = "triggertype";
			}
			arg1
			{
				title = "Invert choice?";
				type = 11;
				enum = "noyes";
			}
			stringarg0
			{
				title = "Skin name";
				type = 2;
			}
		}

		334
		{
			title = "Object Dye";
			arg0
			{
				title = "Trigger type";
				type = 11;
				enum = "triggertype";
			}
			arg1
			{
				title = "Invert choice?";
				type = 11;
				enum = "noyes";
			}
			stringarg0
			{
				title = "Color";
				type = 2;
			}
		}

		337
		{
			title = "Emerald Check";
			arg0
			{
				title = "Trigger type";
				type = 11;
				enum = "triggertype";
			}
			arg1
			{
				title = "Emeralds";
				type = 12;
				enum
				{
					1 = "Emerald 1";
					2 = "Emerald 2";
					4 = "Emerald 3";
					8 = "Emerald 4";
					16 = "Emerald 5";
					32 = "Emerald 6";
					64 = "Emerald 7";
				}
			}
			arg2
			{
				title = "Check if";
				type = 11;
				enum = "flagcheck";
			}
		}

		340
		{
			title = "NiGHTS Mare";
			arg0
			{
				title = "Trigger type";
				type = 11;
				enum = "triggertype";
			}
			arg1
			{
				title = "Mare";
			}
			arg2
			{
				title = "Comparison";
				type = 11;
				enum = "comparison";
			}
		}

		343
		{
			title = "Gravity Check";
			arg0
			{
				title = "Trigger type";
				type = 11;
				enum = "triggertype";
			}
			arg1
			{
				title = "Gravity";
				type = 11;
				enum
				{
					0 = "Normal gravity";
					1 = "Reverse gravity";
					2 = "Reverse gravity (no MF2_OBJECTFLIP)";
				}
			}
		}

		399
		{
			title = "Level Load";
		}
	}

	linedefexecsector
	{
		title = "Linedef Executor (sector)";

		400
		{
			title = "Set Tagged Sector's Heights/Textures";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Affected planes";
				type = 11;
				enum = "floorceiling";
			}
			arg2
			{
				title = "Set flats?";
				type = 11;
				enum = "noyes";
			}
		}

		402
		{
			title = "Copy Light Level to Tagged Sectors";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Don't copy main light level";
					2 = "Don't copy floor light level";
					4 = "Don't copy ceiling light level";
				}
			}
		}

		408
		{
			title = "Set Tagged Sector's Flats";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Affected planes";
				type = 11;
				enum = "floorceiling";
			}
		}

		409
		{
			title = "Change Tagged Sector's Tag";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Tag";
				type = 13;
			}
			arg2
			{
				title = "Behavior";
				type = 11;
				enum
				{
					0 = "Add tag";
					1 = "Remove tag";
					2 = "Replace first tag";
					3 = "Change trigger tag";
				}
			}
		}

		410
		{
			title = "Change Front Sector's Tag";
			arg0
			{
				title = "Tag";
				type = 13;
			}
			arg1
			{
				title = "Behavior";
				type = 11;
				enum
				{
					0 = "Add tag";
					1 = "Remove tag";
					2 = "Replace first tag";
					3 = "Change trigger tag";
				}
			}
		}

		416
		{
			title = "Start Adjustable Flickering Light";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Speed";
			}
			arg2
			{
				title = "Brightness 1";
			}
			arg3
			{
				title = "Use target brightness?";
				type = 11;
				enum = "noyes";
			}
			arg4
			{
				title = "Brightness 2";
			}
		}

		417
		{
			title = "Start Adjustable Pulsating Light";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Speed";
			}
			arg2
			{
				title = "Brightness 1";
			}
			arg3
			{
				title = "Use target brightness?";
				type = 11;
				enum = "noyes";
			}
			arg4
			{
				title = "Brightness 2";
			}
		}

		418
		{
			title = "Start Adjustable Blinking Light";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Brightness 1 tics";
			}
			arg2
			{
				title = "Brightness 2 tics";
			}
			arg3
			{
				title = "Brightness 1";
			}
			arg4
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Use target brightness";
					2 = "Synchronized";
				}
			}
			arg5
			{
				title = "Brightness 2";
			}
		}

		420
		{
			title = "Fade Light Level";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Destination light level";
			}
			arg2
			{
				title = "Fading speed";
			}
			arg3
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Add to current light level";
					2 = "Interrupt ongoing fades";
					4 = "Speed is duration";
				}
			}
		}

		421
		{
			title = "Stop Lighting Effect";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
		}

		435
		{
			title = "Change Plane Scroller Direction";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Speed";
				tooltip = "In fracunits per tic.";
			}
		}

		467
		{
			title = "Set Tagged Sector's Light Level";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Light level";
			}
			arg2
			{
				title = "Affected area";
				type = 11;
				enum
				{
					0 = "Sector";
					1 = "Floor";
					2 = "Ceiling";
				}
			}
			arg3
			{
				title = "Set/Add?";
				type = 11;
				enum = "setadd";
			}
		}

		469
		{
			title = "Change Tagged Sector's Gravity";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Set/Multiply?";
				type = 11;
				enum
				{
					0 = "Set";
					1 = "Multiply";
				}
			}
			arg2
			{
				title = "Flip flag";
				type = 11;
				enum
				{
					0 = "Don't change";
					1 = "Set";
					2 = "Remove";
				}
			}
			arg3
			{
				title = "Override gravity?";
				type = 11;
				enum
				{
					0 = "No";
					1 = "Yes";
				}
			}
			stringarg0
			{
				title = "Gravity value";
				type = 2;
			}
		}
	}

	linedefexecplane
	{
		title = "Linedef Executor (plane movement)";

		403
		{
			title = "Move Tagged Sector's Planes";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Affected planes";
				type = 11;
				enum = "floorceiling";
			}
			arg2
			{
				title = "Speed";
				tooltip = "In fracunits per tic.";
			}
			arg3
			{
				title = "Linedef executor tag";
				type = 15;
			}
			arg4
			{
				title = "Set flats?";
				type = 11;
				enum = "noyes";
			}
		}

		405
		{
			title = "Move Planes by Set Distance";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Affected planes";
				type = 11;
				enum = "floorceiling";
			}
			arg2
			{
				title = "Distance";
			}
			arg3
			{
				title = "Speed";
				tooltip = "In fracunits per tic.";
			}
			arg4
			{
				title = "Instant?";
				type = 11;
				enum = "noyes";
			}
		}

		411
		{
			title = "Stop Plane Movement";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
		}

		428
		{
			title = "Start Platform Movement";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Speed";
				tooltip = "In fracunits per tic.";
			}
			arg2
			{
				title = "Starting delay (tics)";
			}
			arg3
			{
				title = "Delay before flip (tics)";
			}
			arg4
			{
				title = "Starting direction";
				type = 11;
				enum
				{
					0 = "Down";
					1 = "Up";
				}
			}
		}

		429
		{
			title = "Crush Planes Once";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Affected planes";
				type = 11;
				enum = "floorceiling";
			}
			arg2
			{
				title = "Crush speed";
				tooltip = "In fracunits per tic.";
			}
			arg3
			{
				title = "Retract speed";
				tooltip = "In fracunits per tic.";
			}
		}
	}

	linedefexecplayer
	{
		title = "Linedef Executor (player/object)";

		412
		{
			title = "Teleporter";
			arg0
			{
				title = "Destination thing tag";
				type = 14;
			}
			arg1
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Silent";
					2 = "Keep angle";
					4 = "Keep momentum";
					8 = "Relative silent";
				}
			}
			arg2
			{
				title = "X offset";
			}
			arg3
			{
				title = "Y offset";
			}
			arg4
			{
				title = "Z offset";
			}
		}

		425
		{
			title = "Change Object State";
			stringarg0
			{
				title = "State";
				type = 2;
			}
		}

		426
		{
			title = "Stop Object";
			arg0
			{
				title = "Move to center?";
				type = 11;
				enum = "noyes";
			}
		}

		427
		{
			title = "Award Score";
			arg0
			{
				title = "Score";
			}
		}

		432
		{
			title = "Enable/Disable 2D Mode";
			arg0
			{
				title = "Mode";
				type = 11;
				enum
				{
					0 = "2D";
					1 = "3D";
				}
			}
		}

		433
		{
			title = "Enable/Disable Gravity Flip";
			arg0
			{
				title = "Set gravity";
				type = 11;
				enum
				{
					0 = "Reverse";
					1 = "Normal";
				}
			}
			arg1
			{
				title = "Invert current gravity";
				type = 11;
				enum
				{
					0 = "No";
					1 = "Yes";
				}
			}
			arg2
			{
				title = "Force MFE_VERTICALFLIP";
				type = 11;
				enum
				{
					0 = "No";
					1 = "Yes";
				}
			}
		}

		434
		{
			title = "Award Power-Up";
			stringarg0
			{
				title = "Power";
				type = 2;
			}
			stringarg1
			{
				title = "Duration/Amount";
				type = 2;
			}
		}

		437
		{
			title = "Disable Player Control";
			arg0
			{
				title = "Time";
			}
			arg1
			{
				title = "Allow jumping?";
				type = 11;
				enum = "noyes";
			}
		}

		438
		{
			title = "Change Object Size";
			arg0
			{
				title = "Size (%)";
				default = 100;
			}
		}

		442
		{
			title = "Change Object Type State";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Change to";
				type = 11;
				enum
				{
					0 = "Specified state";
					1 = "Next state";
				}
			}
			stringarg0
			{
				title = "Object type";
				type = 2;
			}
			stringarg1
			{
				title = "State";
				type = 2;
			}
		}

		457
		{
			title = "Track Object's Angle";
			arg0
			{
				title = "Anchor tag";
				type = 14;
			}
			arg1
			{
				title = "Angle tolerance";
				type = 8;
			}
			arg2
			{
				title = "Time tolerance";
			}
			arg3
			{
				title = "Trigger linedef tag";
				type = 15;
			}
			arg4
			{
				title = "Track after failure?";
				type = 11;
				enum = "noyes";
			}
		}

		458
		{
			title = "Stop Tracking Object's Angle";
		}

		460
		{
			title = "Award Rings";
			arg0
			{
				title = "Rings";
			}
			arg1
			{
				title = "Periodicity";
			}
		}

		461
		{
			title = "Spawn Object";
			arg0
			{
				title = "X position";
			}
			arg1
			{
				title = "Y position";
			}
			arg2
			{
				title = "Z position";
			}
			arg3
			{
				title = "Angle";
				type = 8;
			}
			arg4
			{
				title = "Randomize position?";
				type = 11;
				enum = "noyes";
			}
			arg5
			{
				title = "Max X position";
			}
			arg6
			{
				title = "Max Y position";
			}
			arg7
			{
				title = "Max Z position";
			}
			stringarg0
			{
				title = "Object type";
				type = 2;
			}
		}

		462
		{
			title = "Stop Timer/Exit Stage in Record Attack";
		}

		463
		{
			title = "Dye Object";
			stringarg0
			{
				title = "Skin color";
				type = 2;
			}
		}

		464
		{
			title = "Trigger Egg Capsule";
			arg0
			{
				title = "Egg Capsule tag";
				type = 14;
			}
			arg1
			{
				title = "End level?";
				type = 11;
				enum = "yesno";
			}
		}

		466
		{
			title = "Set Level Failure State";
			arg0
			{
				title = "State";
				type = 11;
				enum
				{
					0 = "Failure";
					1 = "Success";
				}
			}
		}
	}

	linedefexecmisc
	{
		title = "Linedef Executor (misc.)";

		413
		{
			title = "Change Music";
			arg0
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "For all players";
					2 = "Seek offset from current position";
					4 = "Fade to custom volume";
					8 = "Don't reload after death";
					16 = "Force music reload";
					32 = "Don't loop";
				}
			}
			arg1
			{
				title = "Position";
			}
			arg2
			{
				title = "Fade out time";
			}
			arg3
			{
				title = "Fade in time";
			}
			arg4
			{
				title = "Fade destination volume";
			}
			arg5
			{
				title = "Fade start volume";
				default = -1;
			}
			arg6
			{
				title = "Track number";
			}
			stringarg0
			{
				title = "Music name";
				tooltip = "Takes a music lump name, without the O_ or D_ prefix. Use - to disable music.\nExample: GFZ1";
				type = 2;
			}
		}

		414
		{
			title = "Play Sound Effect";
			arg0
			{
				title = "Source";
				type = 11;
				enum
				{
					0 = "Triggering object";
					1 = "Trigger sector";
					2 = "Nowhere";
					3 = "Tagged sectors";
				}
			}
			arg1
			{
				title = "Listener";
				type = 11;
				enum
				{
					0 = "Triggering player";
					1 = "Everyone";
					2 = "Everyone touching tagged sectors";
				}
			}
			arg2
			{
				title = "Target sector tag";
				type = 13;
			}
			stringarg0
			{
				title = "Sound name";
				tooltip = "Takes a DS constant.\nExample: DSTHOK";
				type = 2;
			}
		}

		415
		{
			title = "Run Script";
			stringarg0
			{
				title = "Lump name";
				type = 2;
			}
		}

		422
		{
			title = "Switch to Cut-Away View";
			arg0
			{
				title = "Viewpoint tag";
				type = 14;
			}
			arg1
			{
				title = "Time";
			}
		}

		423
		{
			title = "Change Sky";
			arg0
			{
				title = "Sky number";
			}
			arg1
			{
				title = "For all players?";
				type = 11;
				enum = "noyes";
			}
		}

		424
		{
			title = "Change Weather";
			arg0
			{
				title = "Weather";
				type = 11;
				enum
				{
					0 = "None";
					1 = "Storm (thunder, lightning and rain)";
					2 = "Snow";
					3 = "Rain";
					4 = "Preloaded";
					5 = "Storm (no rain)";
					6 = "Storm (no lightning)";
				}
			}
			arg1
			{
				title = "For all players?";
				type = 11;
				enum = "noyes";
			}
		}

		436
		{
			title = "Shatter FOF";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Control sector tag";
				type = 13;
			}
		}

		439
		{
			title = "Change Tagged Linedef's Textures";
			arg0
			{
				title = "Target linedef tag";
				type = 15;
			}
			arg1
			{
				title = "Affected sides";
				type = 11;
				enum = "frontbackboth";
			}
			arg2
			{
				title = "Change unset textures?";
				type = 11;
				enum = "yesno";
			}
			arg3
			{
				title = "Use backside textures?";
				type = 11;
				enum = "noyes";
			}
		}

		440
		{
			title = "Start Metal Sonic Race";
		}

		441
		{
			title = "Condition Set Trigger";
			arg0
			{
				title = "Trigger number";
			}
		}

		443
		{
			title = "Call Lua Function";
			stringarg0
			{
				title = "Function name";
				type = 2;
			}
		}

		444
		{
			title = "Earthquake";
			arg0
			{
				title = "Duration";
			}
			arg1
			{
				title = "Intensity";
			}
		}

		445
		{
			title = "Make FOF Disappear/Reappear";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Control sector tag";
				type = 13;
			}
			arg2
			{
				title = "Effect";
				type = 11;
				enum
				{
					0 = "Disappear";
					1 = "Reappear";
				}
			}
		}

		446
		{
			title = "Make FOF Crumble";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Control sector tag";
				type = 13;
			}
			arg2
			{
				title = "Respawn?";
				type = 11;
				enum
				{
					0 = "Yes";
					1 = "No";
					2 = "Unless FF_NORETURN";
					3 = "Only if FF_NORETURN";
				}
			}
		}

		447
		{
			title = "Change Tagged Sector's Colormap";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Colormap sector tag";
				type = 13;
			}
			arg2
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Add to existing colormap";
					2 = "Subtract light R";
					4 = "Subtract light G";
					8 = "Subtract light B";
					16 = "Subtract light A";
					32 = "Subtract fade R";
					64 = "Subtract fade G";
					128 = "Subtract fade B";
					256 = "Subtract fade A";
					512 = "Subtract fadestart";
					1024 = "Subtract fadeend";
					2048 = "Ignore flags";
				}
			}
		}

		448
		{
			title = "Change Skybox";
			arg0
			{
				title = "Viewpoint thing tag";
			}
			arg1
			{
				title = "Centerpoint thing tag";
			}
			arg2
			{
				title = "Change?";
				type = 11;
				enum
				{
					0 = "Viewpoint";
					1 = "Centerpoint";
					2 = "Both";
				}
			}
			arg3
			{
				title = "For all players?";
				type = 11;
				enum = "noyes";
			}
		}

		449
		{
			title = "Enable Bosses with Parameter";
			arg0
			{
				title = "Boss ID";
			}
			arg1
			{
				title = "Effect";
				type = 11;
				enum
				{
					0 = "Enable";
					1 = "Disable";
				}
			}
		}

		450
		{
			title = "Execute Linedef Executor (specific tag)";
			arg0
			{
				title = "Trigger linedef tag";
				type = 15;
			}
		}

		451
		{
			title = "Execute Linedef Executor (random tag in range)";
			arg0
			{
				title = "Start of tag range";
				type = 15;
			}
			arg1
			{
				title = "End of tag range";
				type = 15;
			}
		}

		452
		{
			title = "Set FOF Translucency";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Control sector tag";
				type = 13;
			}
			arg2
			{
				title = "Alpha";
				tooltip = "Ranges from 0 (fully transparent) to 255 (fully opaque).";
			}
			arg3
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Add to current translucency";
					2 = "Don't handle FF_TRANSLUCENT";
				}
			}
		}

		453
		{
			title = "Fade FOF";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Control sector tag";
				type = 13;
			}
			arg2
			{
				title = "Alpha";
				tooltip = "Ranges from 0 (fully transparent) to 255 (fully opaque).";
			}
			arg3
			{
				title = "Fading speed (tics)";
			}
			arg4
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Add to current translucency";
					2 = "Interrupt ongoing fades";
					4 = "Speed is duration";
					8 = "Don't change collision";
					16 = "No collision during fade";
					32 = "Don't handle FF_TRANSLUCENT";
					64 = "Don't handle FF_EXISTS";
					128 = "Don't fade lighting";
					256 = "Don't fade colormap";
					512 = "Use exact alpha in OpenGL";
				}
			}
		}

		454
		{
			title = "Stop Fading FOF";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Control sector tag";
				type = 13;
			}
			arg2
			{
				title = "Finalize collision?";
				type = 11;
				enum = "yesno";
			}
		}

		455
		{
			title = "Fade Tagged Sector's Colormap";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Colormap sector tag";
				type = 13;
			}
			arg2
			{
				title = "Fade duration";
			}
			arg3
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Add to existing colormap";
					2 = "Subtract light R";
					4 = "Subtract light G";
					8 = "Subtract light B";
					16 = "Subtract light A";
					32 = "Subtract fade R";
					64 = "Subtract fade G";
					128 = "Subtract fade B";
					256 = "Subtract fade A";
					512 = "Subtract fadestart";
					1024 = "Subtract fadeend";
					2048 = "Ignore flags";
					4096 = "Fade from invisible black";
					8192 = "Interrupt ongoing fades";
				}
			}
		}

		456
		{
			title = "Stop Fading Tagged Sector's Colormap";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
		}

		459
		{
			title = "Control Text Prompt";
			arg0
			{
				title = "Prompt number";
			}
			arg1
			{
				title = "Page number";
			}
			arg2
			{
				title = "Flags";
				type = 11;
				enum
				{
					1 = "Close current text prompt";
					2 = "Trigger linedef executor on close";
					4 = "Find prompt by name";
					8 = "Don't disable controls";
				}
			}
			arg3
			{
				title = "Trigger linedef tag";
				type = 15;
			}
			stringarg0
			{
				title = "Prompt name";
				type = 2;
			}
		}

		465
		{
			title = "Set Linedef Executor Delay";
			arg0
			{
				title = "Linedef tag";
				type = 15;
			}
			arg1
			{
				title = "Value";
			}
			arg2
			{
				title = "Set/Add?";
				type = 11;
				enum = "setadd";
			}
		}

		468
		{
			title = "Change Linedef Argument";
			arg0
			{
				title = "Linedef tag";
				type = 15;
			}
			arg1
			{
				title = "Argument";
			}
			arg2
			{
				title = "Value";
			}
			arg3
			{
				title = "Set/Add?";
				type = 11;
				enum = "setadd";
			}
		}
	}

	linedefexecpoly
	{
		title = "Linedef Executor (polyobject)";

		480
		{
			title = "PolyObject Door Slide";
			arg0
			{
				title = "PolyObject tag";
				type = 14;
			}
			arg1
			{
				title = "Speed";
				tooltip = "In fracunits per tic.";
			}
			arg2
			{
				title = "Distance";
			}
			arg3
			{
				title = "Return delay (tics)";
			}
		}

		481
		{
			title = "PolyObject Door Swing";
			arg0
			{
				title = "PolyObject tag";
				type = 14;
			}
			arg1
			{
				title = "Speed";
				tooltip = "In fracunits per tic.";
			}
			arg2
			{
				title = "Rotation";
				type = 8;
			}
			arg3
			{
				title = "Return delay (tics)";
			}
		}

		482
		{
			title = "Move PolyObject";
			arg0
			{
				title = "PolyObject tag";
				type = 14;
			}
			arg1
			{
				title = "Speed";
				tooltip = "In fracunits per tic.";
			}
			arg2
			{
				title = "Distance";
			}
			arg3
			{
				title = "Override?";
				type = 11;
				enum = "noyes";
			}
		}

		484
		{
			title = "Rotate PolyObject";
			arg0
			{
				title = "PolyObject tag";
				type = 14;
			}
			arg1
			{
				title = "Speed";
				tooltip = "In degrees per tic.";
			}
			arg2
			{
				title = "Rotation";
				tooltip = "How many degrees the PolyObject will rotate.";
				type = 8;
			}
			arg3
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Don't turn others";
					2 = "Turn players";
					4 = "Continuous rotation";
					8 = "Override";
				}
			}
		}

		488
		{
			title = "Move PolyObject by Waypoints";
			arg0
			{
				title = "PolyObject tag";
				type = 14;
			}
			arg1
			{
				title = "Speed";
				tooltip = "In fracunits per tic.";
			}
			arg2
			{
				title = "Waypoint sequence";
				tooltip = "The sequence number of (zoom tube) waypoints to use.";
			}
			arg3
			{
				title = "Return behavior";
				type = 11;
				enum
				{
					0 = "Don't return";
					1 = "Return to first waypoint";
					2 = "Repeat sequence in reverse";
				}
			}
			arg4
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Move in reverse";
					2 = "Loop movement";
				}
			}
		}

		489
		{
			title = "Set PolyObject Visibility/Tangibility";
			arg0
			{
				title = "PolyObject tag";
				type = 14;
			}
			arg1
			{
				title = "Visibility";
				type = 11;
				enum
				{
					0 = "No change";
					1 = "Visible";
					2 = "Invisible";
				}
			}
			arg2
			{
				title = "Tangibility";
				type = 11;
				enum
				{
					0 = "No change";
					1 = "Tangible";
					2 = "Intangible";
				}
			}
		}

		491
		{
			title = "Set PolyObject Translucency";
			arg0
			{
				title = "PolyObject tag";
				type = 14;
			}
			arg1
			{
				title = "Translucency level";
				tooltip = "Ranges from 0 (fully opaque) to 10 (fully transparent).";
			}
			arg2
			{
				title = "Set/Add?";
				type = 11;
				enum = "setadd";
			}
		}

		492
		{
			title = "Fade PolyObject Translucency";
			arg0
			{
				title = "PolyObject tag";
				type = 14;
			}
			arg1
			{
				title = "Translucency level";
				tooltip = "Ranges from 0 (fully opaque) to 10 (fully transparent).";
			}
			arg2
			{
				title = "Fading speed";
			}
			arg3
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Add to current translucency";
					2 = "Interrupt ongoing fades";
					4 = "Speed is duration";
					8 = "Don't change collision";
					16 = "No collision during fade";
				}
			}
		}
	}

	scrollpush
	{
		title = "Scrollers and Pushers";

		500
		{
			title = "Scroll Wall";
			arg0
			{
				title = "Side";
				type = 11;
				enum = "frontbackboth";
			}
			arg1
			{
				title = "Horizontal speed";
			}
			arg2
			{
				title = "Vertical speed";
			}
		}

		502
		{
			title = "Scroll Tagged Walls";
			arg0
			{
				title = "Linedef tag";
				type = 15;
			}
			arg1
			{
				title = "Side";
				type = 11;
				enum = "frontbackboth";
			}
			arg2
			{
				title = "Horizontal speed";
			}
			arg3
			{
				title = "Vertical speed";
			}
			arg4
			{
				title = "Type";
				type = 11;
				enum = "scrolltype";
			}
		}

		510
		{
			title = "Scroll Planes";
			arg0
			{
				title = "Sector tag";
				type = 13;
				tooltip = "A tag of 0 will scroll the planes of this line's front sector.";
			}
			arg1
			{
				title = "Affected planes";
				type = 11;
				enum = "floorceiling";
			}
			arg2
			{
				title = "Scroll/Carry?";
				type = 11;
				enum = "scrollcarry";
			}
			arg3
			{
				title = "Base speed";
			}
			arg4
			{
				title = "Type";
				type = 26;
				enum = "scrolltype";
				flags
				{
					4 = "Non-exclusive";
				}
			}
		}

		541
		{
			title = "Wind/Current";
			arg0
			{
				title = "Sector tag";
				type = 13;
				tooltip = "A tag of 0 will apply the effect to this line's front sector.";
			}
			arg1
			{
				title = "Horizontal speed";
			}
			arg2
			{
				title = "Vertical speed";
			}
			arg3
			{
				title = "Type";
				type = 11;
				enum
				{
					0 = "Wind";
					1 = "Current";
				}
			}
			arg4
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Slide";
					2 = "Non-exclusive";
				}
			}
		}
	}

	light
	{
		title = "Lighting";

		600
		{
			title = "Copy Light Level to Tagged Sector's Planes";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Affected planes";
				type = 11;
				enum = "floorceiling";
			}
		}

		602
		{
			title = "Adjustable Pulsating Light";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Speed";
			}
			arg2
			{
				title = "Brightness 1";
			}
			arg3
			{
				title = "Use target brightness?";
				type = 11;
				enum = "noyes";
			}
			arg4
			{
				title = "Brightness 2";
			}
		}

		603
		{
			title = "Adjustable Flickering Light";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Speed";
			}
			arg2
			{
				title = "Brightness 1";
			}
			arg3
			{
				title = "Use target brightness?";
				type = 11;
				enum = "noyes";
			}
			arg4
			{
				title = "Brightness 2";
			}
		}

		604
		{
			title = "Adjustable Blinking Light";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Brightness 1 tics";
			}
			arg2
			{
				title = "Brightness 2 tics";
			}
			arg3
			{
				title = "Brightness 1";
			}
			arg4
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Use target brightness";
					2 = "Synchronized";
				}
			}
			arg5
			{
				title = "Brightness 2";
			}
		}

		606
		{
			title = "Copy Colormap";
			arg0
			{
				title = "Target sector tag";
				type = 13;
			}
			arg1
			{
				title = "Colormap sector tag";
				type = 13;
			}
		}
	}

	slope
	{
		title = "Slope";

		700
		{
			title = "Create Sector-Based Slope";
			id = "plane_align";
			arg0
			{
				title = "Floor";
				type = 11;
				enum = "frontback";
			}
			arg1
			{
				title = "Ceiling";
				type = 11;
				enum = "frontback";
			}
			arg2
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "No physics";
					2 = "Dynamic";
					4 = "Copy to other side";
				}
			}
		}

		704
		{
			title = "Create Vertex-Based Slope";
			id = "srb2_vertexslope";
			arg0
			{
				title = "Plane";
				type = 11;
				enum
				{
					0 = "Front floor";
					1 = "Front ceiling";
					2 = "Back floor";
					3 = "Back ceiling";
				}
			}
			arg1
			{
				title = "Vertex 1 tag";
				type = 14;
			}
			arg2
			{
				title = "Vertex 2 tag";
				type = 14;
			}
			arg3
			{
				title = "Vertex 3 tag";
				type = 14;
			}
			arg4
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "No physics";
					2 = "Dynamic";
				}
			}
		}

		720
		{
			title = "Copy Slope";
			id = "plane_copy";
			arg0
			{
				title = "Front floor tag";
				type = 13;
			}
			arg1
			{
				title = "Front ceiling tag";
				type = 13;
			}
			arg2
			{
				title = "Back floor tag";
				type = 13;
			}
			arg3
			{
				title = "Back ceiling tag";
				type = 13;
			}
			arg4
			{
				title = "Share slope";
				type = 12;
				enum
				{
					1 = "Front floor to back sector";
					2 = "Back floor to front sector";
					4 = "Front ceiling to back sector";
					8 = "Back ceiling to front sector";
				}
			}
		}

		799
		{
			title = "Set Tagged Dynamic Slope Vertex to Front Sector Height";
			arg0
			{
				title = "Apply height";
				type = 11;
				enum
				{
					0 = "Absolute";
					1 = "Relative";
				}
			}
		}
	}
}
